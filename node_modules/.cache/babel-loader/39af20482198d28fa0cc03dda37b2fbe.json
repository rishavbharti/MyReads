{"ast":null,"code":"import _classCallCheck from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\src\\\\ShelfChanger.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\n\nvar ShelfChanger =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShelfChanger, _React$Component);\n\n  function ShelfChanger() {\n    _classCallCheck(this, ShelfChanger);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShelfChanger).apply(this, arguments));\n  }\n\n  _createClass(ShelfChanger, [{\n    key: \"render\",\n    // updateShelf=(book, shelf)=>\n    // {\n    //     this.props.onShelfUpdate(book, shelf)\n    // }\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.props.currentShelf,\n        onChange: function onChange(e) {\n          return _this.props.onShelfUpdate(_this.props.book, e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"None\")));\n    }\n  }]);\n\n  return ShelfChanger;\n}(React.Component);\n\nexport default ShelfChanger; //onChange={e=> this.props.onShelfUpdate(this.props.book, e.target.value)}\n// onClick={()=>this.updateShelf(this.props.book, 'wantToRead')}\n// onClick={()=>this.updateShelf(this.props.book, 'read')}\n// active={this.state.currentShelf==='currentlyReading'}\n// active={this.state.currentShelf==='wantToRead'}\n// active={this.state.currentShelf==='read'}\n// active={this.state.currentShelf==='none'}","map":{"version":3,"sources":["D:\\REACT\\reactnd-project-myreads-starter\\src\\ShelfChanger.js"],"names":["React","Link","BooksAPI","ShelfChanger","props","currentShelf","e","onShelfUpdate","book","target","value","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;IAEMC,Y;;;;;;;;;;;;;AAEF;AACA;AACA;AACA;6BAGA;AAAA;;AACI,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,YAA1B;AAAwC,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAG,KAAI,CAACF,KAAL,CAAWG,aAAX,CAAyB,KAAI,CAACH,KAAL,CAAWI,IAApC,EAA0CF,CAAC,CAACG,MAAF,CAASC,KAAnD,CAAH;AAAA,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAiB,QAAA,QAAQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,CADJ;AAWH;;;;EApBsBV,KAAK,CAACW,S;;AAuBjC,eAAeR,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI';\r\n\r\nclass ShelfChanger extends React.Component\r\n{\r\n    // updateShelf=(book, shelf)=>\r\n    // {\r\n    //     this.props.onShelfUpdate(book, shelf)\r\n    // }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"book-shelf-changer\">\r\n                <select value={this.props.currentShelf} onChange={e=> this.props.onShelfUpdate(this.props.book, e.target.value)}>\r\n                    <option value=\"\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option> \r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShelfChanger;\r\n\r\n//onChange={e=> this.props.onShelfUpdate(this.props.book, e.target.value)}\r\n// onClick={()=>this.updateShelf(this.props.book, 'wantToRead')}\r\n// onClick={()=>this.updateShelf(this.props.book, 'read')}\r\n// active={this.state.currentShelf==='currentlyReading'}\r\n// active={this.state.currentShelf==='wantToRead'}\r\n// active={this.state.currentShelf==='read'}\r\n// active={this.state.currentShelf==='none'}\r\n"]},"metadata":{},"sourceType":"module"}