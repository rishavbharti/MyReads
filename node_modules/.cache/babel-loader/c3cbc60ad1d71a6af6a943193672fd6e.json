{"ast":null,"code":"import _classCallCheck from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\src\\\\SearchLibrary.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport { Link } from 'react-router-dom';\n\nvar SearchLibrary =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchLibrary, _React$Component);\n\n  function SearchLibrary() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchLibrary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchLibrary)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: '',\n      queryResult: []\n    };\n\n    _this.handleSearch = function (e) {\n      _this.setState({\n        query: e.target.value\n      });\n\n      BooksAPI.search(_this.state.query).then(function (response) {\n        return (// this.setState(currentState => ({queryResult: currentState.queryResult.concat([response]) }))\n          _this.setState({\n            queryResult: response\n          })\n        );\n      }, console.log(_this.state.queryResult));\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchLibrary, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.query,\n        onChange: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchLibrary;\n}(React.Component);\n\nexport default SearchLibrary;\n{\n  /*\r\n  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n  You can find these search terms here:\r\n  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n  \n  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n  you don't find a specific author or title. Every search is limited by search terms.\r\n  */\n}","map":{"version":3,"sources":["D:\\REACT\\reactnd-project-myreads-starter\\src\\SearchLibrary.js"],"names":["React","BooksAPI","Link","SearchLibrary","state","query","queryResult","handleSearch","e","setState","target","value","search","then","response","console","log","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;IAEMC,a;;;;;;;;;;;;;;;;;UAEFC,K,GAAM;AACFC,MAAAA,KAAK,EAAC,EADJ;AAEFC,MAAAA,WAAW,EAAE;AAFX,K;;UAKNC,Y,GAAa,UAACC,CAAD,EAAK;AACd,YAAKC,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAEG,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;;AACAV,MAAAA,QAAQ,CAACW,MAAT,CAAgB,MAAKR,KAAL,CAAWC,KAA3B,EACKQ,IADL,CACU,UAACC,QAAD;AAAA,eACN;AACI,gBAAKL,QAAL,CAAc;AAACH,YAAAA,WAAW,EAAEQ;AAAd,WAAd;AAFE;AAAA,OADV,EAIQC,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAL,CAAWE,WAAvB,CAJR;AAMH,K;;;;;;;6BAED;AACI,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AACI,QAAA,EAAE,EAAC,GADP;AAEI,QAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAMI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,2BAA/B;AACA,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KADlB;AAEA,QAAA,QAAQ,EAAE,KAAKE,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CANJ,CADJ,CADJ;AA0CH;;;;EA5DuBP,KAAK,CAACiB,S;;AA+DlC,eAAed,aAAf;AAGA;AAAC;;;;;;;;AAOE","sourcesContent":["import React from 'react';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass SearchLibrary extends React.Component\r\n{\r\n    state={\r\n        query:'',\r\n        queryResult: []\r\n    }\r\n\r\n    handleSearch=(e)=>{\r\n        this.setState({query: e.target.value})\r\n        BooksAPI.search(this.state.query)\r\n            .then((response)=>\r\n            // this.setState(currentState => ({queryResult: currentState.queryResult.concat([response]) }))\r\n                this.setState({queryResult: response}),\r\n                console.log(this.state.queryResult)\r\n            )\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    {/* <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button> */}\r\n                    <Link\r\n                        to='/'\r\n                        className=\"close-search\"\r\n                    >Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" placeholder=\"Search by title or author\"\r\n                        value={this.state.query}\r\n                        onChange={this.handleSearch}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {this.state.queryResult.map((book)=>(\r\n                            <li key={book.id}>\r\n                                <div className=\"book\">\r\n                                    <div className=\"book-top\">\r\n                                        <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                                        <div className=\"book-shelf-changer\">\r\n                                            <select>\r\n                                                <option value=\"move\" disabled>Move to...</option>\r\n                                                <option value=\"currentlyReading\" defaultValue='selected'>Currently Reading</option>\r\n                                                <option value=\"wantToRead\">Want to Read</option>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"book-title\">{book.title}</div>\r\n                                    <div className=\"book-authors\">{book.authors}</div>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div> */}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchLibrary;\r\n\r\n\r\n{/*\r\nNOTES: The search from BooksAPI is limited to a particular set of search terms.\r\nYou can find these search terms here:\r\nhttps://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\nHowever, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\nyou don't find a specific author or title. Every search is limited by search terms.\r\n*/}"]},"metadata":{},"sourceType":"module"}