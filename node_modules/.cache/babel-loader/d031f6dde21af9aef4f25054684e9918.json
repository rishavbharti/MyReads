{"ast":null,"code":"import _classCallCheck from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\src\\\\ShelfChanger.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\n\nvar ShelfChanger =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShelfChanger, _React$Component);\n\n  function ShelfChanger() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShelfChanger);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShelfChanger)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentShelf: _this.props.currentShelf\n    };\n\n    _this.updateShelf = function (book, shelf) {\n      _this.props.onShelfUpdate(book, shelf);\n    };\n\n    return _this;\n  }\n\n  _createClass(ShelfChanger, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        onClick: function onClick() {\n          return _this2.updateShelf(_this2.props.book, 'currentlyReading');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        onClick: function onClick() {\n          return _this2.updateShelf(_this2.props.book, 'wantToRead');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"read\",\n        onClick: function onClick() {\n          return _this2.updateShelf(_this2.props.book, 'read');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"None\")));\n    }\n  }]);\n\n  return ShelfChanger;\n}(React.Component);\n\nexport default ShelfChanger; // active={this.state.currentShelf==='currentlyReading'}\n// active={this.state.currentShelf==='wantToRead'}\n// active={this.state.currentShelf==='read'}\n// active={this.state.currentShelf==='none'}","map":{"version":3,"sources":["D:\\REACT\\reactnd-project-myreads-starter\\src\\ShelfChanger.js"],"names":["React","Link","BooksAPI","ShelfChanger","state","currentShelf","props","updateShelf","book","shelf","onShelfUpdate","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;IAEMC,Y;;;;;;;;;;;;;;;;;UAEFC,K,GAAM;AACFC,MAAAA,YAAY,EAAE,MAAKC,KAAL,CAAWD;AADvB,K;;UAINE,W,GAAY,UAACC,IAAD,EAAOC,KAAP,EACZ;AACI,YAAKH,KAAL,CAAWI,aAAX,CAAyBF,IAAzB,EAA+BC,KAA/B;AACH,K;;;;;;;6BAGD;AAAA;;AACI,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAkC,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACF,WAAL,CAAiB,MAAI,CAACD,KAAL,CAAWE,IAA5B,EAAkC,kBAAlC,CAAJ;AAAA,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,YAAd;AAA4B,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACD,WAAL,CAAiB,MAAI,CAACD,KAAL,CAAWE,IAA5B,EAAkC,YAAlC,CAAJ;AAAA,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACD,WAAL,CAAiB,MAAI,CAACD,KAAL,CAAWE,IAA5B,EAAkC,MAAlC,CAAJ;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,CADJ;AAWH;;;;EAxBsBR,KAAK,CAACW,S;;AA2BjC,eAAeR,YAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI';\r\n\r\nclass ShelfChanger extends React.Component\r\n{\r\n    state={\r\n        currentShelf: this.props.currentShelf\r\n    }\r\n\r\n    updateShelf=(book, shelf)=>\r\n    {\r\n        this.props.onShelfUpdate(book, shelf)\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"book-shelf-changer\">\r\n                <select>\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\"  onClick={()=>this.updateShelf(this.props.book, 'currentlyReading')}>Currently Reading</option>\r\n                    <option value=\"wantToRead\"  onClick={()=>this.updateShelf(this.props.book, 'wantToRead')}>Want to Read</option> \r\n                    <option value=\"read\"  onClick={()=>this.updateShelf(this.props.book, 'read')}>Read</option>\r\n                    <option value=\"none\" >None</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShelfChanger;\r\n\r\n// active={this.state.currentShelf==='currentlyReading'}\r\n// active={this.state.currentShelf==='wantToRead'}\r\n// active={this.state.currentShelf==='read'}\r\n// active={this.state.currentShelf==='none'}\r\n"]},"metadata":{},"sourceType":"module"}