{"ast":null,"code":"import _classCallCheck from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\src\\\\SearchLibrary.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport { Link } from 'react-router-dom';\n\nvar SearchLibrary =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchLibrary, _React$Component);\n\n  function SearchLibrary() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchLibrary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchLibrary)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: '',\n      queryResult: []\n    };\n\n    _this.handleSearch = function (e) {\n      _this.setState({\n        query: e.target.value\n      });\n\n      BooksAPI.search(_this.state.query).then(function (response) {\n        return _this.setState({\n          queryResult: response\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchLibrary, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.query,\n        onChange: function onChange() {\n          return _this2.handleSearch;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.state.queryResult.length !== 0 && this.state.queryResult.map(function (book) {\n        return React.createElement(\"li\", {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 188,\n            backgroundImage: \"url(\".concat(book.imageLinks.thumbnail, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"book-shelf-changer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"move\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Move to...\"), React.createElement(\"option\", {\n          value: \"currentlyReading\",\n          defaultValue: \"selected\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Currently Reading\"), React.createElement(\"option\", {\n          value: \"wantToRead\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Want to Read\"), React.createElement(\"option\", {\n          value: \"read\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Read\"), React.createElement(\"option\", {\n          value: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"None\")))), React.createElement(\"div\", {\n          className: \"book-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, book.title), React.createElement(\"div\", {\n          className: \"book-authors\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, book.authors)));\n      }))));\n    }\n  }]);\n\n  return SearchLibrary;\n}(React.Component);\n\nexport default SearchLibrary;\n{\n  /*\r\n  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n  You can find these search terms here:\r\n  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n  \n  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n  you don't find a specific author or title. Every search is limited by search terms.\r\n  */\n}","map":{"version":3,"sources":["D:\\REACT\\reactnd-project-myreads-starter\\src\\SearchLibrary.js"],"names":["React","BooksAPI","Link","SearchLibrary","state","query","queryResult","handleSearch","e","setState","target","value","search","then","response","length","map","book","id","width","height","backgroundImage","imageLinks","thumbnail","title","authors","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass SearchLibrary extends React.Component\r\n{\r\n    state={\r\n        query:'',\r\n        queryResult: []\r\n    }\r\n\r\n    handleSearch=(e)=>{\r\n        this.setState({query: e.target.value})\r\n        BooksAPI.search(this.state.query)\r\n            .then((response)=>\r\n                this.setState({queryResult: response})\r\n            )\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    {/* <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button> */}\r\n                    <Link\r\n                        to='/'\r\n                        className=\"close-search\"\r\n                    >Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" placeholder=\"Search by title or author\"\r\n                        value={this.state.query}\r\n                        onChange={()=>this.handleSearch}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {this.state.queryResult.length!==0 && (this.state.queryResult.map((book)=>(\r\n                            <li key={book.id}>\r\n                                <div className=\"book\">\r\n                                    <div className=\"book-top\">\r\n                                        <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                                        <div className=\"book-shelf-changer\">\r\n                                            <select>\r\n                                                <option value=\"move\" disabled>Move to...</option>\r\n                                                <option value=\"currentlyReading\" defaultValue='selected'>Currently Reading</option>\r\n                                                <option value=\"wantToRead\">Want to Read</option>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"book-title\">{book.title}</div>\r\n                                    <div className=\"book-authors\">{book.authors}</div>\r\n                                </div>\r\n                            </li>\r\n                        )))}\r\n                    </ol>\r\n                </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchLibrary;\r\n\r\n\r\n{/*\r\nNOTES: The search from BooksAPI is limited to a particular set of search terms.\r\nYou can find these search terms here:\r\nhttps://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\nHowever, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\nyou don't find a specific author or title. Every search is limited by search terms.\r\n*/}"]},"metadata":{},"sourceType":"module"}