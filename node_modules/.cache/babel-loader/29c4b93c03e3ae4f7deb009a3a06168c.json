{"ast":null,"code":"import _classCallCheck from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\REACT\\\\reactnd-project-myreads-starter\\\\src\\\\SearchLibrary.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport { Link } from 'react-router-dom';\nimport ShelfChanger from './ShelfChanger';\n\nvar SearchLibrary =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchLibrary, _React$Component);\n\n  function SearchLibrary() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchLibrary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchLibrary)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: '',\n      queryResult: []\n    };\n    _this.searchTerms = ['Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS'];\n\n    _this.handleSearch = function (e) {\n      _this.setState({\n        query: e.target.value\n      });\n\n      var queryFilter = _this.searchTerms.filter(function (term) {\n        return term.toLowerCase().includes(_this.state.query.trim());\n      });\n\n      if (_this.state.query.length > 0 && queryFilter.length !== 0) {\n        BooksAPI.search(_this.state.query.trim()).then(function (response) {\n          return _this.setState({\n            queryResult: response\n          });\n        } // console.log(this.props.books)\n        // (response)=>console.log(response),\n        // (err)=>console.log(err)\n        ); // .then(()=>console.log(this.state.queryResult.length))\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchLibrary, [{\n    key: \"render\",\n    value: function render() {\n      //let filteredBooks=[]\n      // this.state.queryResult!==undefined ? filteredBooks=()=>this.state.queryResult.filter(book=> !this.props.books.includes(book)):''\n      console.log(filteredBooks);\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.query,\n        onChange: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.queryResult.length !== undefined ? this.state.queryResult.map(function (book) {\n        return React.createElement(\"li\", {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 188,\n            backgroundImage: \"url(\".concat(book.imageLinks.thumbnail, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), !book.hasOwnProperty('shelf') ? book.shelf = 'none' : '' // Object.assign(book, {shelf: 'none'})\n        , React.createElement(ShelfChanger, {\n          book: book,\n          currentShelf: book.shelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"book-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, book.title), React.createElement(\"div\", {\n          className: \"book-authors\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, book.authors)));\n      }) : React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"No result found\"))));\n    }\n  }]);\n\n  return SearchLibrary;\n}(React.Component);\n\nexport default SearchLibrary;\n{\n  /*\r\n  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n  You can find these search terms here:\r\n  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n  \n  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n  you don't find a specific author or title. Every search is limited by search terms.\r\n  */\n}","map":{"version":3,"sources":["D:\\REACT\\reactnd-project-myreads-starter\\src\\SearchLibrary.js"],"names":["React","BooksAPI","Link","ShelfChanger","SearchLibrary","state","query","queryResult","searchTerms","handleSearch","e","setState","target","value","queryFilter","filter","term","toLowerCase","includes","trim","length","search","then","response","console","log","filteredBooks","undefined","map","book","id","width","height","backgroundImage","imageLinks","thumbnail","hasOwnProperty","shelf","title","authors","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport {Link} from 'react-router-dom';\r\nimport ShelfChanger from './ShelfChanger';\r\n\r\nclass SearchLibrary extends React.Component\r\n{\r\n    state={\r\n        query:'',\r\n        queryResult: []\r\n    }\r\n    searchTerms=['Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS']\r\n    \r\n    handleSearch=(e)=>{\r\n        this.setState({query: e.target.value})     \r\n        const queryFilter=this.searchTerms.filter(term=>term.toLowerCase().includes(this.state.query.trim()))\r\n        if(this.state.query.length>0 && queryFilter.length!==0)\r\n        {\r\n            BooksAPI.search(this.state.query.trim())\r\n                .then(\r\n                    (response)=>this.setState({queryResult: response})\r\n                    // console.log(this.props.books)\r\n                    // (response)=>console.log(response),\r\n                    // (err)=>console.log(err)\r\n                )\r\n                // .then(()=>console.log(this.state.queryResult.length))\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        //let filteredBooks=[]\r\n        // this.state.queryResult!==undefined ? filteredBooks=()=>this.state.queryResult.filter(book=> !this.props.books.includes(book)):''\r\n        \r\n        console.log(filteredBooks)\r\n        return(\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    {/* <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button> */}\r\n                    <Link\r\n                        to='/'\r\n                        className=\"close-search\"\r\n                    >Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" placeholder=\"Search by title or author\"\r\n                        value={this.state.query}\r\n                        onChange={this.handleSearch}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {this.state.queryResult.length!==undefined ? (this.state.queryResult.map((book)=>(\r\n                            \r\n                            <li key={book.id}>\r\n                                <div className=\"book\">\r\n                                    <div className=\"book-top\">\r\n                                        <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                                        {!book.hasOwnProperty('shelf') ? book.shelf='none' : ''\r\n                                            // Object.assign(book, {shelf: 'none'})\r\n                                        }\r\n                                        {/* {console.log(book)} */}\r\n                                        <ShelfChanger book={book} currentShelf={book.shelf}/>\r\n                                    </div>\r\n                                    <div className=\"book-title\">{book.title}</div>\r\n                                    <div className=\"book-authors\">{book.authors}</div>\r\n                                </div>\r\n                            </li>\r\n                        ))) : (\r\n                            <h2>No result found</h2>\r\n                        )}\r\n                    </ol>\r\n                </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchLibrary;\r\n\r\n\r\n{/*\r\nNOTES: The search from BooksAPI is limited to a particular set of search terms.\r\nYou can find these search terms here:\r\nhttps://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\nHowever, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\nyou don't find a specific author or title. Every search is limited by search terms.\r\n*/}"]},"metadata":{},"sourceType":"module"}