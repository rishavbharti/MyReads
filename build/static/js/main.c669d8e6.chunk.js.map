{"version":3,"sources":["BooksAPI.js","ShelfChanger.js","SearchLibrary.js","Shelf.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","ShelfChanger","_this","this","react_default","a","createElement","className","value","props","currentShelf","onChange","e","onShelfUpdate","target","disabled","React","Component","SearchLibrary","state","queryResult","searchTerms","handleSearch","setState","queryFilter","filter","term","toLowerCase","includes","trim","length","BooksAPI","response","error","undefined","map","b","_this2","react_router_dom","to","type","placeholder","key","style","width","height","backgroundImage","imageLinks","thumbnail","hasOwnProperty","src_ShelfChanger","title","authors","Shelf","name","BooksApp","currentlyReading","wantToRead","read","reRenderScreen","_callee","regenerator_default","wrap","_context","prev","next","forEach","currentState","stop","toUpdateShelf","_callee2","_context2","react_router","exact","path","src_Shelf","render","src_SearchLibrary","textAlign","marginBottom","href","ReactDOM","src_App","document","getElementById"],"mappings":"+RACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAQNS,EAAS,kBACpBC,MAAK,GAAAC,OAAIZ,EAAJ,UAAiB,CAAEO,YACrBM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SAEVC,EAAS,SAACC,EAAMC,GAAP,OACpBT,MAAK,GAAAC,OAAIZ,EAAJ,WAAAY,OAAiBO,EAAKE,IAAM,CAC/BC,OAAQ,MACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAER,YACtBP,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERc,EAAS,SAACC,GAAD,OACpBnB,MAAK,GAAAC,OAAIZ,EAAJ,WAAkB,CACrBsB,OAAQ,OACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEE,YACtBjB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,wBCvBRc,mLAfX,IAAAC,EAAAC,KACI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQE,MAAOL,KAAKM,MAAMC,aAAcC,SAAU,SAAAC,GAAC,OAAGV,EAAKO,MAAMI,cAAcX,EAAKO,MAAMpB,KAAMuB,EAAEE,OAAON,SACrGJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,GAAGO,UAAQ,GAAzB,cACAX,EAAAC,EAAAC,cAAA,UAAQE,MAAM,oBAAd,qBACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,cAAd,gBACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,QAAd,QACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,QAAd,iBAXOQ,IAAMC,WCmElBC,6MA9DXC,MAAM,CACFnB,MAAM,GACNoB,YAAa,MAEjBC,YAAY,CAAC,UAAW,MAAO,0BAA2B,YAAa,SAAU,WAAY,aAAc,SAAU,YAAa,QAAS,WAAY,QAAS,YAAa,WAAY,WAAY,SAAU,OAAQ,UAAW,UAAW,QAAS,SAAU,cAAe,oBAAqB,QAAS,UAAW,QAAS,YAAa,aAAc,UAAW,OAAQ,UAAW,QAAS,UAAW,WAAY,SAAU,QAAS,SAAU,QAAS,SAAU,OAAQ,QAAS,UAAW,QAAS,OAAQ,SAAU,UAAW,QAAS,mBAAoB,OAAQ,SAAU,UAAW,QAAS,UAAW,YAAa,WAAY,aAAc,cAAe,SAAU,aAAc,cAAe,QAAS,QAAS,QAAS,WAAY,UAAW,SAAU,kBAAmB,cAAe,QAAS,WAAY,OAAQ,QAAS,OAAQ,UAAW,SAAU,WAAY,kBAAmB,kBAAmB,SAE14BC,aAAa,SAAAV,GACTV,EAAKqB,SAAS,CAACvB,MAAOY,EAAEE,OAAON,QAC/B,IAAMgB,EAAYtB,EAAKmB,YAAYI,OAAO,SAAAC,GAAI,OAAEA,EAAKC,cAAcC,SAAS1B,EAAKiB,MAAMnB,MAAM6B,UAC1F3B,EAAKiB,MAAMnB,MAAM8B,OAAO,GAA0B,IAArBN,EAAYM,QAExCC,EAAgB7B,EAAKiB,MAAMnB,MAAM6B,QACxB9C,KAAK,SAACiD,GAEEA,EAASC,YAA2BC,IAAlBF,EAASF,SAE5BE,EAASG,IAAI,SAAA9C,GAAI,OAAKa,EAAKO,MAAMtB,MAAMsC,OAAO,SAACW,GAAD,OAAOA,EAAE7C,KAAOF,EAAKE,KAAI4C,IAAI,SAAAC,GAAC,OAAI/C,EAAKC,MAAQ8C,EAAE9C,UAC/FY,EAAKqB,SAAS,CAACH,YAAaY,gFAMpD,IAAAK,EAAAlC,KACI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACIC,GAAG,IACHhC,UAAU,gBAFd,SAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SAAOkC,KAAK,OAAOC,YAAY,4BAC/BjC,MAAOL,KAAKgB,MAAMnB,MAClBW,SAAUR,KAAKmB,iBAIvBlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACuB2B,IAAhC/B,KAAKgB,MAAMC,YAAYU,OAAsB3B,KAAKgB,MAAMC,YAAYe,IAAI,SAAC9C,GAAD,OACrEe,EAAAC,EAAAC,cAAA,MAAIoC,IAAKrD,EAAKE,IACVa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaoC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,OAAAhE,OAASO,EAAK0D,WAAY1D,EAAK0D,WAAWC,UAAW,GAArD,QAC3E3D,EAAK4D,eAAe,SAA+B,GAApB5D,EAAKC,MAAM,OAC5Cc,EAAAC,EAAAC,cAAC4C,EAAD,CAAc7D,KAAMA,EAAMqB,aAAcrB,EAAKC,MAAOuB,cAAewB,EAAK5B,MAAMI,iBAElFT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAclB,EAAK8D,OAClC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBlB,EAAK+D,aAI5ChD,EAAAC,EAAAC,cAAA,uCAvDAU,IAAMC,WC4BnBoC,mLA3BX,IAAAnD,EAAAC,KACI,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBJ,KAAKM,MAAM6C,MACxClD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTJ,KAAKM,MAAMnB,MAAM6C,IAAI,SAAA9C,GAAI,OACtBe,EAAAC,EAAAC,cAAA,MAAIoC,IAAKrD,EAAKE,IACda,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaoC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,OAAAhE,OAASO,EAAK0D,WAAWC,UAAzB,QAC7E5C,EAAAC,EAAAC,cAAC4C,EAAD,CAAc7D,KAAMA,EAAMqB,aAAcR,EAAKO,MAAMC,aAAcG,cAAeX,EAAKO,MAAMI,iBAE/FT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAclB,EAAK8D,OAClC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBlB,EAAK+D,wBAlBxDpC,IAAMC,WCkFXsC,6MA7EbpC,MAAQ,CACNhC,MAAO,GACPqE,iBAAkB,GAClBC,WAAY,GACZC,KAAM,MAERC,oCAAe,SAAAC,IAAA,OAAAC,EAAAxD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEPlC,IACHhD,KAAK,SAACiD,GAAD,OAAY9B,EAAKqB,SAAS,CAACpC,MAAM6C,MACtCjD,KAAK,WACJmB,EAAKiB,MAAMhC,MAAM+E,QAAQ,SAAC7E,GACxB,OAAOA,EAAKC,OAEV,IAAK,mBAAqBY,EAAKqB,SAAS,SAAA4C,GAAY,MAAK,CAACX,iBAAkBW,EAAaX,iBAAiB1E,OAAO,CAACO,OACxF,MAC1B,IAAK,aAAea,EAAKqB,SAAS,SAAA4C,GAAY,MAAK,CAACV,WAAYU,EAAaV,WAAW3E,OAAO,CAACO,OACtE,MAC1B,IAAK,OAASa,EAAKqB,SAAS,SAAA4C,GAAY,MAAK,CAACT,KAAMS,EAAaT,KAAK5E,OAAO,CAACO,YAZzE,wBAAA0E,EAAAK,SAAAR,EAAAzD,WA0BfkE,oDAAc,SAAAC,EAAOjF,EAAMC,GAAb,OAAAuE,EAAAxD,EAAAyD,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,cAAAM,EAAAN,KAAA,EAENlC,EAAgB1C,EAAMC,GAC3BP,KAAK,WACJM,EAAKC,MAAQA,EACbY,EAAKqB,SAAS,SAAA4C,GAAY,MAAK,CAC7BhF,MAAOgF,EAAahF,MAAMsC,OAAO,SAAAW,GAAC,OAAIA,EAAE7C,KAAOF,EAAKE,KAAIT,OAAO,CAACO,OAElEa,EAAKqB,SAAS,CACZiC,iBAAkB,GAClBC,WAAY,GACZC,KAAM,OAIT3E,KAAKmB,EAAKyD,gBAfC,wBAAAY,EAAAH,SAAAE,EAAAnE,oJAJZA,KAAKwD,kDAuBP,IAAAtB,EAAAlC,KACI,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KACdtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqE,EAAD,CAAOrF,MAAOa,KAAKgB,MAAMqC,iBAAkB9C,aAAc,mBAAoB4C,KAAM,oBAAqBzC,cAAeV,KAAKkE,gBAC5HjE,EAAAC,EAAAC,cAACqE,EAAD,CAAOrF,MAAOa,KAAKgB,MAAMsC,WAAY/C,aAAc,aAAc4C,KAAM,eAAgBzC,cAAeV,KAAKkE,gBAC3GjE,EAAAC,EAAAC,cAACqE,EAAD,CAAOrF,MAAOa,KAAKgB,MAAMuC,KAAMhD,aAAc,OAAQ4C,KAAM,OAAQzC,cAAeV,KAAKkE,mBAI/FjE,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,UAAUhC,UAAU,eAC3BH,EAAAC,EAAAC,cAAA,8BAGJF,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUE,OAAQ,kBAAIxE,EAAAC,EAAAC,cAACuE,EAAD,CAAe1F,MAAOkD,EAAKlB,MAAMhC,MAAO0B,cAAewB,EAAKgC,mBACpGjE,EAAAC,EAAAC,cAAA,UAAQqC,MAAO,CAACmC,UAAW,SAAUC,aAAc,QAAnD,eAAuE3E,EAAAC,EAAAC,cAAA,KAAG0E,KAAK,6CAAR,0BAzE1DhE,IAAMC,iBCD7BgE,IAASL,OACLxE,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KAAelC,EAAAC,EAAAC,cAAC4E,EAAD,OAAyBC,SAASC,eAAe","file":"static/js/main.c669d8e6.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\n\r\nclass ShelfChanger extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"book-shelf-changer\">\r\n                <select value={this.props.currentShelf} onChange={e=> this.props.onShelfUpdate(this.props.book, e.target.value)}>\r\n                    <option value=\"\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option> \r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShelfChanger;\r\n","import React from 'react';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport {Link} from 'react-router-dom';\r\nimport ShelfChanger from './ShelfChanger';\r\n\r\nclass SearchLibrary extends React.Component\r\n{\r\n    state={\r\n        query:'',\r\n        queryResult: []\r\n    }\r\n    searchTerms=['Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS']\r\n    \r\n    handleSearch=e=>{\r\n        this.setState({query: e.target.value})     \r\n        const queryFilter=this.searchTerms.filter(term=>term.toLowerCase().includes(this.state.query.trim()))\r\n        if(this.state.query.length>0 && queryFilter.length!==0)\r\n        {\r\n            BooksAPI.search(this.state.query.trim())\r\n                    .then((response) => \r\n                    {\r\n                        if (!response.error && response.length!==undefined)\r\n                        {\r\n                            response.map(book => (this.props.books.filter((b) => b.id === book.id).map(b => book.shelf = b.shelf)))\r\n                            this.setState({queryResult: response})\r\n                        }\r\n                    })\r\n        }     \r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link\r\n                        to='/'\r\n                        className=\"close-search\"\r\n                    >Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" placeholder=\"Search by title or author\"\r\n                        value={this.state.query}\r\n                        onChange={this.handleSearch}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {this.state.queryResult.length!==undefined ? (this.state.queryResult.map((book)=>(       \r\n                            <li key={book.id}>\r\n                                <div className=\"book\">\r\n                                    <div className=\"book-top\">\r\n                                        <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: `url(${book.imageLinks? book.imageLinks.thumbnail: ''})` }}></div>\r\n                                        {!book.hasOwnProperty('shelf') ? book.shelf='none' : ''}\r\n                                        <ShelfChanger book={book} currentShelf={book.shelf} onShelfUpdate={this.props.onShelfUpdate}/>\r\n                                    </div>\r\n                                    <div className=\"book-title\">{book.title}</div>\r\n                                    <div className=\"book-authors\">{book.authors}</div>\r\n                                </div>\r\n                            </li>\r\n                        ))) : (\r\n                            <h2>No result found</h2>\r\n                        )}\r\n                    </ol>\r\n                </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchLibrary;","import React from 'react';\r\nimport ShelfChanger from './ShelfChanger';\r\n\r\nclass Shelf extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">{this.props.name}</h2>\r\n                        <div className=\"bookshelf-books\">\r\n                            <ol className=\"books-grid\">\r\n                                {this.props.shelf.map(book =>  (\r\n                                    <li key={book.id}>\r\n                                    <div className=\"book\">\r\n                                        <div className=\"book-top\">\r\n                                            <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                                            <ShelfChanger book={book} currentShelf={this.props.currentShelf} onShelfUpdate={this.props.onShelfUpdate}/>\r\n                                        </div>\r\n                                        <div className=\"book-title\">{book.title}</div>\r\n                                        <div className=\"book-authors\">{book.authors}</div>\r\n                                    </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ol>\r\n                        </div>                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Shelf;","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport {Route, Link} from 'react-router-dom';\r\nimport SearchLibrary from './SearchLibrary';\r\nimport Shelf from './Shelf';\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: [],\r\n    currentlyReading: [],\r\n    wantToRead: [],\r\n    read: []\r\n  }\r\n  reRenderScreen=async ()=>\r\n  {\r\n    await BooksAPI.getAll()\r\n      .then((response)=>this.setState({books:response}))\r\n      .then(()=>{\r\n        this.state.books.forEach((book) => {\r\n          switch(book.shelf)\r\n          {\r\n            case 'currentlyReading': {this.setState(currentState => ({currentlyReading: currentState.currentlyReading.concat([book]) }))}\r\n                                      break;\r\n            case 'wantToRead': {this.setState(currentState => ({wantToRead: currentState.wantToRead.concat([book]) }))}\r\n                                      break;    \r\n            case 'read': {this.setState(currentState => ({read: currentState.read.concat([book]) }))}\r\n                                      break;    \r\n            default:               \r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.reRenderScreen();\r\n  }\r\n\r\n  \r\n  toUpdateShelf=async (book, shelf)=>\r\n  {\r\n    await BooksAPI.update(book, shelf)\r\n    .then(()=>{\r\n      book.shelf = shelf;\r\n      this.setState(currentState => ({\r\n        books: currentState.books.filter(b => b.id !== book.id).concat([book])\r\n      }));\r\n      this.setState({\r\n        currentlyReading: [],\r\n        wantToRead: [],\r\n        read: []\r\n        })\r\n      \r\n    })\r\n    .then(this.reRenderScreen)\r\n  }\r\n\r\n  render() \r\n  {\r\n      return (\r\n      <div className=\"app\">\r\n        <Route exact path='/'>\r\n            <div className=\"list-books\">\r\n              <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n              </div>\r\n              <div className=\"list-books-content\">\r\n                <div>                 \r\n                    <Shelf shelf={this.state.currentlyReading} currentShelf={'currentlyReading'} name={'Currently Reading'} onShelfUpdate={this.toUpdateShelf}/>\r\n                    <Shelf shelf={this.state.wantToRead} currentShelf={'wantToRead'} name={'Want To Read'} onShelfUpdate={this.toUpdateShelf}/>\r\n                    <Shelf shelf={this.state.read} currentShelf={'read'} name={'Read'} onShelfUpdate={this.toUpdateShelf}/>\r\n                </div>\r\n              </div>            \r\n            </div>  \r\n            <Link to='/search' className=\"open-search\">\r\n              <button>Add a book</button>\r\n            </Link>            \r\n          </Route>\r\n          <Route exact path='/search' render={()=><SearchLibrary books={this.state.books} onShelfUpdate={this.toUpdateShelf}/>}/>\r\n          <footer style={{textAlign: 'center', marginBottom: '5px'}}>Designed by <a href=\"https://www.linkedin.com/in/rishavbharti/\">Rishav Bharti</a></footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default BooksApp","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}